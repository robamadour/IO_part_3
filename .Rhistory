# Add mapping from omega1 to (region,naics,gravity)
params <- GetOmega1Mapping(params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
params
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Author: Roberto Zuniga
# Date: November 12, 2021
# Description: This script partially replicates Blunder, Gowrisankaran and Blundell
# (2020). Specifically, It solver the Bellman equation and computes the nested
# fixed point estimator.
# Set working directories
#current_dir <- "./IO_partII"
current_dir <- "G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/"
setwd(current_dir)
outputs_dir <- paste0(current_dir,"Outputs")
bellman_data_file <- paste0(current_dir,"Data/data_for_bellman_computations.csv")
panel_data_file <- paste0(current_dir,"Data/analysis_data.csv")
source("Bellman_functions.R")
# Read Bellman data
data_bellman <- read.csv(bellman_data_file)
data <- subset(data_bellman,naics_recode == 1)
data$index <- 1:nrow(data)
# Read analysis data for lilkelihood computations
panel_data <- read.csv(panel_data_file)
panel_data <- subset(panel_data,naics_recode == 1)
# Define the working parameters
params <- list()
params$data <- data
params$panel_data <- panel_data
params$N1 <- 161  # number of states per each omega1
params$n_omega1 <- length(unique((data$omega1))) # number of omega1 states
params$DAVgrid <- (0:19)/19*9.5  # DAV grid
params$n_DAV <- length(params$DAVgrid) # number of points in DAV grid
params$DAV_deprate <- 0.1  # DAV depreciation rate
params$beta <- 0.95^(1/4)  # discount factor
params$gamma <- 0.57721566490153*0 # Euler's gamma constant
params$tol <- 1E-6 # stopping condition for the Bellman equation solution
params$nregoutcomes <- 80 # number of regulatory outcomes
params$ntransitions <- 3  # number of states transitions from omega to omega_tilde
################################################################################
# Create structures for fast computation of Bellman equation
params <- AddParams(params)
# Add mapping from omega1 to (region,naics,gravity)
params <- GetOmega1Mapping(params)
################################################################################
# Solve the Bellman equation
coeff_BGL <- c(2.872, -0.049, -0.077, -5.980, -0.065) # BGL
resultsBGL <- Bellman(coeff_BGL, params)
################################################################################
# Compute transition probabilities
# Add helper matrices
params <- AddTransitionParams(params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Read parameter grid
GridFile <- paste0(current_dir,"Data/parameter_grid_assignment.csv")
parameterGrid <- as.matrix(read.csv(GridFile))
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
write.csv(results,"Output/test_moments.csv", row.names = FALSE)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareMoments(moments_param2,ExpectedResult3,params)
CompareMoments(moments_param2,ExpectedResult3,params)
write.csv(results,"Output/test_moments.csv", row.names = FALSE)
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
# Question 2
FileQ2 <- "Output/steadyState_DAV4_P3Q2.csv"
Question_P3Q2(piSS_omega1_BGL,FileQ2,params)
coeff_BGL <- c(2.872, -0.049, -0.077, -5.980, -0.065) # BGL
resultsBGL <- Bellman(coeff_BGL, params)
params <- AddTransitionParams(params)
# Get Transition matrix
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
ExpectedResult1 <- paste0(current_dir,"Data/transitionprob_part3_problem1_DAVgrid2_thetaBGL.csv")
CompareTransitionProb(P_omega1_BGL,ExpectedResult1,params)
# Computation of the steady state distribution
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
c(1:5)-1
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareMoments(moments_param2,ExpectedResult3,params)
write.csv(results,"Output/test_moments.csv", row.names = FALSE)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareMoments(moments_param2,ExpectedResult3,params)
aa <- params$omega1Data
View(aa)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
aa<-list()
aa[1] <- "sdsd"
aa
aa[2] <- c(1:3)
aa<-list()
aa[1] <- c(1:3)
aa
aa<-list()
aa
aa$1
aa$1 <- c(1:4)
aa <- list(c(1:4),c(5:8))
aa
aa[1]
aa <- list(matrix(c(1:4),2,2),c(5:8),2,2))
aa <- list(matrix(c(1:4),2,2),matrix(c(5:8),2,2))
aa
aa[1]
aa[]
aa <- list(aa,matrix(c(10:13),2,2))
aa
aa <- list(c(1:4),c(5:8))
aa <- list(matrix(c(1:4),2,2),matrix(c(5:8),2,2))
aa
aa <- list()
aa[1] <- matrix(c(1:4),2,2)
aa
aa <- list()
aa[[1]] <- matrix(c(1:4),2,2)
aa
aa[[2]] <- matrix(c(5:8),2,2)
aa
aa[1]
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Add helper matrices
params <- AddTransitionParams(params)
# Get Transition matrix
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Get Transition matrix
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
# check results
ExpectedResult1 <- paste0(current_dir,"Data/transitionprob_part3_problem1_DAVgrid2_thetaBGL.csv")
CompareTransitionProb(P_omega1_BGL,ExpectedResult1,params)
# Question 1
FileQ1 <- "Output/transProb_DAV4_P3Q1.csv"
Question_P3Q1(P_omega1_BGL,FileQ1,params)
################################################################################
# Computation of the steady state distribution
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
# Question 2
FileQ2 <- "Output/steadyState_DAV4_P3Q2.csv"
Question_P3Q2(piSS_omega1_BGL,FileQ2,params)
# Read parameter grid
GridFile <- paste0(current_dir,"Data/parameter_grid_assignment.csv")
parameterGrid <- as.matrix(read.csv(GridFile))
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Add helper matrices
params <- AddTransitionParams(params)
# Get Transition matrix
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
# check results
ExpectedResult1 <- paste0(current_dir,"Data/transitionprob_part3_problem1_DAVgrid2_thetaBGL.csv")
CompareTransitionProb(P_omega1_BGL,ExpectedResult1,params)
# Question 1
FileQ1 <- "Output/transProb_DAV4_P3Q1.csv"
Question_P3Q1(P_omega1_BGL,FileQ1,params)
################################################################################
# Computation of the steady state distribution
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
# Question 2
FileQ2 <- "Output/steadyState_DAV4_P3Q2.csv"
Question_P3Q2(piSS_omega1_BGL,FileQ2,params)
# Read parameter grid
GridFile <- paste0(current_dir,"Data/parameter_grid_assignment.csv")
parameterGrid <- as.matrix(read.csv(GridFile))
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
a <- c(1:10)
sd(a)
mean(a)
nrow(a)
nrow(moments_param2)
View(parameterGrid)
colnames(parameterGrid)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
FileQ3 <- "Output/moment_mean_sd_P3Q3.csv"
Question_P3Q3(parameterGrid,params,FileQ3)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
Question_P3Q3(parameterGrid,params,FileQ3)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
tic()
Question_P3Q3(parameterGrid,params,FileQ3)
toc()
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
moments_param2 <- moments_param2$moments
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
remove(V0)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
FileQ3 <- "Output/moment_mean_sd_P3Q3.csv"
Question_P3Q3(parameterGrid,params,FileQ3)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
ValuesToIndexExclCompliance(c(1,0,0,1,1))
ValuesToIndexExclCompliance(c(1,0,0,1,20))
ValuesToIndexExclCompliance(c(1,0,0,2,1))
ValuesToIndexExclCompliance(c(2,0,0,0,1))
ValuesToIndexExclCompliance(c(2,0,0,1,1))
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
################################################################################
# Computation of the data moment inputs
dataMoments <- ComputeDataMoments(params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
################################################################################
# Computation of the data moment inputs
dataMoments <- ComputeDataMoments(params)
write.csv(data.frame(dataMoments,"Output/all_data_moments.csv"),row.names = FALSE)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(moments_param2,ExpectedResult4,params)
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
CompareDataMoments(dataMoments,ExpectedResult4,params)
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareDataMoments(dataMoments,ExpectedResult4,params)
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareDataMoments(dataMoments,ExpectedResult4,params)
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareDataMoments(dataMoments,ExpectedResult4,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
CompareDataMoments(dataMoments,ExpectedResult4,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
dataMoments <- ComputeDataMoments(params)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
dataMoments <- ComputeDataMoments(params)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
# Check results
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
dataMoments <- ComputeDataMoments(params)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
# Check results
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
dataMoments <- ComputeDataMoments(params)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
# Check results
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
moments_param2 <- moments_param2$moments
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
FileQ4 <- "Output/datamoment_mean_sd_P3Q4.csv"
Question_P3Q4(dataMoments,params,FileQ4)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
a = "sdsd"
b = c(a,"sdsd")
b
c = c(b, "d334")
c
a = c()
a
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoment,params,File1_Q5,File2_Q5)
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
# Author: Roberto Zuniga
# Date: November 12, 2021
# Description: This script partially replicates Blunder, Gowrisankaran and Blundell
# (2020). Specifically, It solver the Bellman equation and computes the nested
# fixed point estimator.
# Set working directories
#current_dir <- "./IO_partII"
current_dir <- "G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/"
setwd(current_dir)
outputs_dir <- paste0(current_dir,"Outputs")
bellman_data_file <- paste0(current_dir,"Data/data_for_bellman_computations.csv")
panel_data_file <- paste0(current_dir,"Data/analysis_data.csv")
source("Bellman_functions.R")
# Read Bellman data
data_bellman <- read.csv(bellman_data_file)
data <- subset(data_bellman,naics_recode == 1)
data$index <- 1:nrow(data)
# Read analysis data for lilkelihood computations
panel_data <- read.csv(panel_data_file)
panel_data <- subset(panel_data,naics_recode == 1)
# Define the working parameters
params <- list()
params$data <- data
params$panel_data <- panel_data
params$N1 <- 161  # number of states per each omega1
params$n_omega1 <- length(unique((data$omega1))) # number of omega1 states
params$DAVgrid <- (0:19)/19*9.5  # DAV grid
params$n_DAV <- length(params$DAVgrid) # number of points in DAV grid
params$DAV_deprate <- 0.1  # DAV depreciation rate
params$beta <- 0.95^(1/4)  # discount factor
params$gamma <- 0.57721566490153*0 # Euler's gamma constant
params$tol <- 1E-6 # stopping condition for the Bellman equation solution
params$nregoutcomes <- 80 # number of regulatory outcomes
params$ntransitions <- 3  # number of states transitions from omega to omega_tilde
################################################################################
# Create structures for fast computation of Bellman equation
params <- AddParams(params)
# Add mapping from omega1 to (region,naics,gravity)
params <- GetOmega1Mapping(params)
################################################################################
# Solve the Bellman equation
coeff_BGL <- c(2.872, -0.049, -0.077, -5.980, -0.065) # BGL
resultsBGL <- Bellman(coeff_BGL, params)
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
params <- AddTransitionParams(params)
omega1 <- 1
P_omega1_BGL <- GetTransitionProb(params,omega1,resultsBGL$Investprob)
ExpectedResult1 <- paste0(current_dir,"Data/transitionprob_part3_problem1_DAVgrid2_thetaBGL.csv")
CompareTransitionProb(P_omega1_BGL,ExpectedResult1,params)
library(tidyr)
library(ggplot2)
ExpectedResult1 <- paste0(current_dir,"Data/transitionprob_part3_problem1_DAVgrid2_thetaBGL.csv")
CompareTransitionProb(P_omega1_BGL,ExpectedResult1,params)
piSS_omega1_BGL <- SolveSS(P_omega1_BGL,params)
# check results
ExpectedResult2 <- paste0(current_dir,"Data/steadystate_part3_problem2_DAVgrid2_thetaBGL.csv")
CompareSS(piSS_omega1_BGL,ExpectedResult2,params)
GridFile <- paste0(current_dir,"Data/parameter_grid_assignment.csv")
parameterGrid <- as.matrix(read.csv(GridFile))
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
moments_param2 <- moments_param2$moments
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
ExpectedResult3 <- paste0(current_dir,"Data/modelmoments_part3_problem3_param2.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
View(P)
View(invProb)
View(piSS)
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
View(invProb)
View(invProb)
CompareMoments(moments_param2,ExpectedResult3,params)
View(results)
moments_param2 <- moments_param2$moments
moments_param2 <- moments_param2$moments
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
View(P)
write.csv(data.frame(P),"Output/TransitionMatrixOmega1.csv")
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
# check results
moments_param2 <- ComputeMoments(parameterGrid[2,], params)
write.csv(data.frame(P),"Output/TransitionMatrixOmega1.csv")
CompareMoments(moments_param2,ExpectedResult3,params)
write.csv(results,"Output/names.csv")
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
dataMoments <- ComputeDataMoments(params)
# Save data moments
write.csv(data.frame(dataMoments),"Output/all_data_moments.csv",row.names = FALSE)
# Check results
ExpectedResult4 <- paste0(current_dir,"Data/datamoments_part3_problem4_param2.csv")
CompareDataMoments(dataMoments,ExpectedResult4,params)
debugSource('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
source('G:/Mi unidad/Columbia_doc/My Classes/IO I/Assignment/final_version/IO_partII/Bellman_functions.R')
# Generate moments file
File1_Q5 <- "Output/moment_data_class_assignment_use.csv"
File2_Q5 <- "Output/moments_full_info.csv"
GenerateMomentFiles(parameterGrid,dataMoments,params,File1_Q5,File2_Q5)
